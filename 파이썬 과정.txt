파이썬 특징
1.스크립트 언어 (마지막에 넣은 값을 기억함)
a = 1
a = 2
print(a)
2

2.동적타이핑 (int,str등을 선언해주지 않아도 자동으로 선언)
a = 1
b = "hi"

3. 플랫폼 독립적
window / linux(서버용으로 다수 사용) / mac os


자료형
숫자형(int)
+,-,*,/,**제곱,//몫계산,%나눈 나머지
변수 선언 ex) x = 1

문자형(str)
변수 선언 ex) company = 'bit'    or     "bit"
겹치지 않게 두가지 모두 사용가능
문자 + 문자 / 문자 * 숫자 만 가능
""" """ / ''' ''' = 여러 줄 입력
\n = 다음줄
\t = 탭(일정 간격 띄우기)
\을 입력하고 싶을경우 ("\\5000")
문자와 숫자(정수)를 같이 입력하고싶을경우 %d를 사용하여 숫자를 입력 실수를 사용하고싶으면 "%f" %(1/3) 
문자는 %s 문자중 한글자는 %c(char)
ex) a=1 일때 1+1=2
    print("%d + %d = %d" %(a,a,a+a))
    print(f"{변수}")  = 버전 3.6 이상에서 사용가능

company = kakao 일때
print(company[0]) = k     (1,a / 2,k / 3,a / 4,o)   = 컴퓨터는 숫자를 셀때 0부터 시작
반대로 문자에서 숫자를 알고싶을때는 print(company.find("a")) = 1   or  print(company.index("a")) = 1
문자에 들어있는 특정 문자의 갯수를 알고싶을땐 print(company.count("k")) = 2
문자의 길이를 알고싶을땐  print(len(company)) = 5

print("%.3f" %(2/3)) = 0.667
print("%3d" %1) = \\1   print("%3d" %10) = \10    print("%3d" %100) =100




딕셔너리(dictionary): 사전
  { key : value }        person.get(key) = 키가 없어도 오류가아닌 없음으로 나옴 person.keys() = 키의 종류를 보여줌 person.value() = 값의 종류를 보여줌


리스트(list)
  []           tmp.append 로 리스트에 추가    tmp.remove로 삭제 del tmp[0]로 0번째 리스트 삭제
 .sort로 순서대로 정렬 .reverse로 반대로 정렬 .insert(a,b)로 a번째에 b삽입
print(num_list[:4]) = 4번째 미만 즉 3번째 까지 출력
print(num_list[1:4]) = 1번째 ~ 4번째 미만까지 출력
print(num_list[1:]) = 1번째부터 전부 출력
print(num_list[:]) = 처음부터 끝까지 출력


튜플
 ()  읽기전용이므로 추가나 삭제등 읽기를 제외한 기능이 안됨

set   중복 x
 {}  .add()로 추가가능(단 중복은 불가)  set은 순서가 없다
 add(element)
update(list)
remove(element)

a={1,2,3} b={2,3,4,5}일때
a-b = {1}
a|b = {1,2,3,4,5}
a&b = {2,3}


불 (bool , boolean)
True or False(파이썬에선 대문자로 시작)
= 하나는 선언 ==는 양쪽 비교 동등   초과 > / 미만 < / 이상 >= / 이하 <=



clean code
snake case (파이썬에서 자주 사용)  = 문법을 나누는데 _들어감 person_list = ["사람1", "사람2"]
cammel case = 문법을 나누는데 대문자가 들어감 personList = ["사람1", "사람2"]
알아두기



툴
python - pycharm(파이썬에만 특화)
            vscode(여러가지 언어를 범용적으로 이용가능 microsoft사 제공)


깃 허브
git init  - 컴퓨터와 깃허브를 연동
git add .  - 내 작업물을 폴더에 추가
git commit -m "타이틀"  - 수정된 파일을 올릴때 컨펌 (중요)
git branch -M main
git remote add origin https://github.com/ehgus6256/bit_python_basic.git  - 내가 올릴 url주소(처음 한번만 설정)
git push -u origin main  - 


git clone 으로 복사한 코드주소를 복사해옴


깃허브에 올릴때
git add 파일명
git commit -m "컨펌 이름"
git push



조건문
 if ~:
(tab)	print(~)










